#	/////////////////////////////////////////////////////////////
#	Инкапсуляция ................................................

#	Инкапсуляция — ограничение доступа к составляющим объект 
#	компонентам (методам и переменным). Инкапсуляция делает 
#	некоторые из компонент доступными только внутри класса.

#	Инкапсуляция в Python работает лишь на уровне соглашения 
#	между программистами о том, какие атрибуты являются 
#	общедоступными, а какие — внутренними.

#	Одиночное подчеркивание в начале имени атрибута говорит о том, 
#	что переменная или метод не предназначен для использования вне 
#	методов класса, однако атрибут доступен по этому имени.

	class A:
		def _private(self):
			print("Это приватный метод!")

	a = A()
	a._private() # Это приватный метод!

#	Двойное подчеркивание в начале имени атрибута даёт большую 
#	защиту: атрибут становится недоступным по этому имени.

	class B:
		def __private(self):
			print("Это приватный метод!")

	b = B()
	b.__private()

	Traceback (most recent call last):
		File "<stdin>", line 1, in <module>
	AttributeError: 'B' object has no attribute '__private'

#	Однако полностью это не защищает, так как атрибут всё равно 
#	остаётся доступным под именем _ИмяКласса__ИмяАтрибута:

	b._B__private() # Это приватный метод!
