# 	////////////////////////////////////////////////////////
# 	Строки /////////////////////////////////////////////////

# 	упорядоченные последовательности символов, используемые 
# 	для хранения и представления текстовой информации, 
# 	поэтому с помощью строк можно работать со всем, что 
# 	может быть представлено в текстовой форме.

# 	для длиного текста применяются ('''example''')

	test = '''jwejwegr 2364527 sdjfhgsjdf
 			5142315341341 764524726425273
 			jsdfhgsjfgsjsfdhsdfhsdfgjshsj
 	   	   '''

# 	Форматирование строк. //////////////////////////////////

# 	Иногда возникают ситуации, когда нужно сделать строку, 
# 	подставив в неё некоторые данные, полученные в процессе 
# 	выполнения программы (пользовательский ввод, данные 
# 	из файлов и т. д.). Подстановку данных можно сделать 
# 	с помощью форматирования строк. Форматирование можно сделать 
# 	с помощью оператора %, либо с помощью метода format.

	"test: {test[0]}".format(test = [test0, test1, test2, test3])

	'{2},{0},{1}'.format('a', 'b', 'c')

	'{:>30}'.format('right align')

	'{:^30}'.format('center')

#	Методы работы со строками. /////////////////////////////

	len(test)	# длина строки

	test[27]	# обращение по индексу

	test[3:8]	# делаем срез по индексу от, до

	test[1:27:2]	# делаем срез с шагом

	test.isdigit()	# состоит ли строка из цифр

	test.isalpha()	# состоит ли строка из букв

	test.isalnum()	# состоит ли строка из цифр и букв

	test.islower()	# сотсоит ли строка из символов в нижнем регистре

	test.isupper()	# состоит ли строка из символов в верхнем регистре

	test.upper()	# преобразование строки к верхнему регистру
	
	test.lower()	# преобразование строки к нижнему регистру

	test.capitalize()	# переводит первый символ строки в верхний регистр, 
						# а все остальные в нижний