gzip ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

# Этот модуль предназначен для сжатия и распаковки файлов и данных по 
# популярному алгоритму GZIP 

# документация на английском:
# https://docs.python.org/3/library/gzip.html

# :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

from gzip import *

# :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

open(filename, mode='rb', compresslevel=9, encoding=None, 
	errors=None, newline=None)
# Первым параметром указывается либо путь к открываемому архивному файлу, 
# либо пред­ставляющий его файловый объект. Второй параметр задает режим 
# открытия файла: файл может быть открыт как в текстовом, так и в двоич­ном 
# режиме. Третий параметр указывает степень сжатия архива в виде целого 
# числа от 1 (минимальная степень, но максимальная скорость сжатия) до 9 
# (максимальная степень и минимальная скорость сжатия), также может быть 
# задано значение О (отсутствие сжатия). Остальные параметры имеют смысл 
# лишь при открытии файла в текстовом режиме. Отметим, что по умолчанию файл 
# открывается в двоичном режиме. Поэтому, если мы со­бираемся записывать в 
# него строковые данные, нам следует явно указать текстовый режим открытия.
# Функция open() возвращает объект класса GzipFile, представляющий открытый 
# архивный файл. При этом все записываемые в такой файл данные будут 
# автомати­чески архивироваться, а считываемые из него - распаковываться.
# Аргумент mode может быть любым из 'r', 'rb', 'a', 'ab', 'w', 'wb', 'x' 
# или 'xb' для двоичного режима или 'rt', 'at', 'wt' или 'xt' для текстового 
# режима. По умолчанию используется значение 'rb'.


GzipFile(filename=None, mode=None, compresslevel=9, fileobj=None, mtime=None)
# Можно задать либо путь к файлу в параметре filename, либо файловый объект в 
# параметре fileobj. Если задано и то, и другое, имя файла будет включено в 
# заголовок создаваемого GZIР-файла. Параметр mtime указывает значение времени, 
# которое будет добавлено в заголовок созда­ваемого архивного файла, как того 
# требует формат GZIP. Это значение может быть получе­но вызовом функции time() 
# из модуля time или сформировано иным образом. Если пара­метр не указан, будет 
# использовано текущее время. Отметим, что архивный файл в этом случае всегда 
# открывается в двоичном режиме, и от­крыть его в текстовом режиме нельзя, даже 
# если указать текстовый режим открытия.
	peek(n)
	#

	mtime
	#


compress(data, compresslevel=9)
# выполняет сжатие значения и возвращает получившийся в результате массив 
# байтов типа bytes

decompress(data)
# выполняет распаковку сжатых данных и возвращает получившийся результат

