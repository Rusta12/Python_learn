struct ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

# используется для преобразования данных на языке python в 
# структуры двоичных данных, представленные как строки байтов и 
# наоборот. Такие структуры данных часто используются для 
# организации взаимодействий с функциями написанными на языке C, 
# а также при работе с двоичными файлами, сетевыми протаколами 
# или для обмена двоичными данными через последовательные порты

# документация на английском:
# https://docs.python.org/3/library/struct.html

# :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

from struct import *

# :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

pack(fmt, v1, v2, ...)
# преобразует данные в двоичный код
	fmt
	# строка формата состоит из одного или более символов, 
	# большенство символов представляют значение определённого типа
	v1, v2
	# значения которые надо упаковать

pack_into(fmt, buffer, offset, v1, v2, ...)
#

unpack(fmt, buffer)
# преобразование двоичных данных

unpack_from(fmt, buffer, offset=0)
#

iter_unpack(fmt, buffer)
#

calcsize(fmt)
# возвращает кол-во байтов которые требуются для хранения того или
# иного формата 

format
#

size
#