pdb :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

# pdb является интерактивной средой отладки для программ на Python. Он 
# включает возможности приостановки выполнения программы, просмотра 
# значений переменных, построчного выполнения кода так, что вы можете 
# понять, чем ваша программа на самом деле занимается, и найти логические 
# ошибки.

# документация на английском:
# https://docs.python.org/3/library/pdb.html

# :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

EOF
#


alias
#

args / a
# Выводит список аргументов текущей функции

break / b file_name.function_name
# устанавливает точки останова, и отладчик будет проверять код только внутри 
# этих точек. Отладчик присваивает точкам останова порядковые номера, 
# начиная с 1. По этим номерам на точки можно ссылаться. Точки останова 
# можно разместить в строках с определённым номером с помощью синтаксиса 
# <program_file>:<line_number>. Точку останова можно разместить по функции.
# Также можно создать условие
# Если запусть без аргументов, то выведет список точек

bt
#

clear / cl
# очищает точки остановы
    
commands
# 
            
condition
#

continue / cont / c
# Продолжает выполнение программы.

debug / d
#

disable 1
# отключить точки останова, переданный аргумент - номер точки.

display
#

down
#

enable 1
# включить точку остановы №1 

help / h
# Предоставляет список команд или справку для указанной команды.

ignore 1
# с помощью данной команды отладчик может игнорировать точки останова во время 
# текущей итерации программы 

interact
#

jump / j
# Определяет строку, которая будет выполнена далее..

list 3, 5 / l
# без аргументов команда list предоставляет 11 строк вокруг текущей строки
# аргументы это деопазон строк которые следует отобразить с 3 по 5

longlist / ll
#

next / n
# построчное перемещение по программе, команда next выполняет переданную ей 
# функцию и останавливается на следующей строке, она не проходит пошагово по 
# функции.


pp / p
# распечатает значения переменных, предоставит структурную распечатку операторов 
# при помощи модуля pprint.


quit / exit / q
# остановит текущую сессию

restart
#

return / r
# Продолжает выполнение, пока не вернётся текущая функция.

retval
#

run
#

rv
#

source
#

step / s
# построчное перемещение по программе. Команда step останавливается на заданной 
# функции, пошагово отображает работу функции в отличии от next

tbreak
# запускать действия, происходящие в точке останова и создавать временные точки 
# останова, будут автоматически сброшены после первой проверки. 

u
#

unalias
#

undisplay
#

unt
#

until
#

up
#

w
#

whatis
#

where
#
