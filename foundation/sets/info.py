Множества (set и frozenset) :::::::::::::::::::::::::::::::::::::::::::::::

# Множество в python - "контейнер", содержащий не повторяющиеся элементы в 
# случайном порядке.

# документация на английском:
# https://docs.python.org/2/library/stdtypes.html#set-types-set-frozenset

# :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

set(iterable) or frozenset(iterable) or {'a', 'b',}
# создаём множество

x in s 	
# принадлежит ли x множеству s.

set == other	
# все элементы set принадлежат other, все элементы other 
# принадлежат set.

set.copy()	
# копия множества.

set.isdisjoint(other) 
# True, если set и other не имеют общих элементов.

set.issubset(other)
# является ли одно помножество, подмножеством другого 

set.union(other, ...)
# объединение нескольких множеств.

set.intersection(other, ...)
# пересечение.

set.difference(other, ...) 
# множество из всех элементов set, не принадлежащие ни 
# одному из other.

set.symmetric_difference(other) 
# множество из элементов, встречающихся в одном множестве, 
# но не встречающиеся в обоих.



# :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# операции, непосредственно изменяющие множество:

set.update(other, ...) # объединение.

set.intersection_update(other, ...) # пересечение.

set.difference_update(other, ...) # вычитание.

set.symmetric_difference_update(other)
# множество из элементов, встречающихся в одном множестве, но не 
# встречающиеся в обоих.

set.add(elem) 	# добавляет элемент в множество.

set.remove(elem) 	# удаляет элемент из множества. KeyError, 
					# если такого элемента не существует.

set.discard(elem) 	
# удаляет элемент, если он находится в множестве.

set.pop() 
# удаляет первый элемент из множества. Так как множества не 
# упорядочены, нельзя точно сказать, какой элемент будет первым.

set.clear()		# очистка множества.
